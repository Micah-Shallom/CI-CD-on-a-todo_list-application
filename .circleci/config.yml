version: 2.1

orbs: 
  node: circleci/node@5.0.2 

jobs:
  build-app:
    docker:
      - image: cimg/node:15.0.1
    steps:
      - checkout
      - restore_cache:
          keys: [application-build]
      - run:
          name: Building our application with node
          command: |
            npm install
      - save_cache:
          paths: [./node_modules]
          key: application-build

  audit-app:
    docker: 
      - image: cimg/node:15.0.1
    steps:  
      - checkout
      - restore_cache:  
          keys: [application-build]
      - run:
          name: job running security audit on frontend build
          command: |
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical

  deploy-frontend:
    docker:
      - image: docker:17.05.0-ce-git
    steps:  
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip=9.0.0-r1
            pip install docker-compose==1.12.0
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
##########################################################
      - run:
          name: Build application Docker image
          command: |
            docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
            docker build --cache-from=appimage -t appimage .
            docker tag appimage:latest mshallom/appimage:0.0.1
            docker push mshallom/appimage:0.0.1
#######################################################################
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar appimage
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar 
            
  coupling-app-and-db:
    docker:
      - image: docker:17.05.0-ce-git
      steps:  
        - checkout
        - setup_remote_docker
        - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip=9.0.0-r1
            pip install docker-compose==1.12.0
        - run:  
            name: Instantiating all container dockerfile
            command: |
              docker compose -f docker-compose up 





  # deploy-frontend:
  #   docker:
  #   - image: cimg/node:15.0.1
  #     auth:
  #           username: $DOCKER_USERNAME
  #           password: $DOCKER_PASSWORD
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         keys: [application-build]
  #     - run:
  #         name: checking docker version
  #         command: |
  #           docker --version
  #     - run:
  #         name: login into docker hub
  #         command: |
  #           # docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
  #           sudo service docker start
  #           docker build -t artifact . .
            





workflows:
  my_workflow:
    jobs:
      - coupling-app-and-db
      # - deploy-frontend
      # - build-app
      # - audit-app
      # - deploy-frontend:
      #     requires: [build-app, audit-app]
  